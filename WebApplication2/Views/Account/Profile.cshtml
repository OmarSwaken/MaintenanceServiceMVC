@model MaintenanceServiceMVC.ViewModels.ProfileViewModel
@using MaintenanceServiceMVC.Models
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Profile";
}

<h2>Profile</h2>

@if (ViewBag.Message != null)
{
    <div class="alert alert-success">@ViewBag.Message</div>
}

<form asp-action="Profile" method="post">
    <div class="form-group">
        <label>FullName</label>
        <input asp-for="FullName" class="form-control editable" readonly />
    </div>

    <div class="form-group">
        <label>Email</label>
        <input asp-for="Email" class="form-control editable" readonly />
    </div>

    <div class="form-group">
        <label>Role</label>
        @if (User.Identity?.IsAuthenticated ?? false)
        {
            if (User.IsInRole("Customer"))
            {
                <input class="form-control editable" value="Customer" readonly />
            }
            else if (User.IsInRole("Professional"))
            {
                <input class="form-control editable" value="Professional" readonly />
            }
            else if (User.IsInRole("Admin"))
            {
                <input class="form-control editable" value="Admin" readonly />

            }
        }
    </div>

    <div class="form-group">
        <label>Phone Number</label>
        <input asp-for="PhoneNumber" class="form-control editable" readonly />
    </div>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        if (User.IsInRole("Customer"))
        {
            <div class="form-group">
                <label>Address</label>
                <input asp-for="CustomerAddress" class="form-control editable" readonly />
            </div>
        }
        else if (User.IsInRole("Professional"))
        {
            
        }
    }
    

    <button type="button" class="btn btn-primary" id="editBtn">Edit Profile</button>
    <button type="submit" class="btn btn-success d-none" id="saveBtn">Save</button>
    <button type="button" class="btn btn-secondary d-none" id="cancelBtn">Cancel</button>
</form>

@section Scripts {
    <script>
        const editBtn = document.getElementById("editBtn");
        const saveBtn = document.getElementById("saveBtn");
        const cancelBtn = document.getElementById("cancelBtn");
        const inputs = document.querySelectorAll(".editable");

        editBtn.addEventListener("click", () => {
            inputs.forEach(i => i.removeAttribute("readonly"));
            editBtn.classList.add("d-none");
            saveBtn.classList.remove("d-none");
            cancelBtn.classList.remove("d-none");
        });

        cancelBtn.addEventListener("click", () => {
            window.location.reload(); // refresh to original state
        });
    </script>
}
